<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper
  PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
  "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.shxt.model.User">
    <sql id="user_sql">
            user_id userId,
            account,
            password pwd,
            user_name userName,
            status 
    </sql>

    <insert id="add" parameterType="com.shxt.model.User">
        <!-- 定制SQL语句 -->
        INSERT INTO
            sys_user
            <!-- 数据库中的字段 -->
            (account,password,user_name)
        VALUES
            <!-- 类中的属性 -->
            (#{account},#{pwd},#{userName})
    </insert>
    
    <select id="load" parameterType="int" resultType="com.shxt.model.User">
        <!-- 第一种解决方案 -->
        select 
           <include refid="user_sql"/>
        from sys_user where user_id=#{asdfsafdsaf}
    
    </select>
    
    <delete id="delete" parameterType="int">
        delete from sys_user
        where user_id=#{user_id}
    </delete>
    
    <select id="list" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
    
    </select>
    
    <update id="update" parameterType="com.shxt.model.User">
        update
            sys_user
        set
            account=#{account},
            password=#{pwd},
            user_name=#{userName},
            status=#{status}
       where
            user_id=#{userId}
    
    </update>
    
    <select id="listByUserName01" parameterType="string" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_name like #{userName}
    </select>
    
    <select id="listByUserName02" parameterType="string" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_name like CONCAT(#{userName},'%')
    </select>
    <select id="listByUserName03" parameterType="com.shxt.model.User" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_name like ${userName}
    </select>
    
    <select id="listByUserName04" parameterType="map" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_name like ${haha}
    </select>
    
    <select id="listByNameStatus" parameterType="map" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_name like concat(#{name},'%') and status=#{status}
    </select>
    
    <select id="listByIds01" parameterType="map" resultType="com.shxt.model.User">
        select 
           <include refid="user_sql"/>
        from sys_user
        where user_id &gt; #{id1} and user_id &lt; #{id2}
    </select>
    
    <select id="listByIds02" parameterType="map" resultType="com.shxt.model.User">
        <![CDATA[
         select 
            user_id userId,
            account,
            password pwd,
            user_name userName,
            status 
            from sys_user
            where user_id >= #{id1} and user_id <= #{id2}
        ]]>
    </select>
    
    <select id="listByIds03" parameterType="map" resultType="com.shxt.model.User">
       select 
           <include refid="user_sql"/>
        from sys_user
        where user_id between #{id1} and #{id2}
       
    </select>
    
    
</mapper>